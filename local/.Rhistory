if (type=="l")  geom_path(aes(y=Cases,colour=factor(Index>0)))
)
}
if (graph=="EVI" && ln==T) {
sp3<-ggplot(EVI_output, aes(x=Days,group=variable))+
list(
geom_point(aes(y=log(Cases), color=Index>0), size=0.5),
scale_color_manual(values=c("grey69", "red3")),
theme(legend.position = "none"),
labs(y = "ln(Cases)", x="Days"),
if (type=="l")  geom_path(aes(y=log(Cases),colour=factor(Index>0)))
)
}
if (graph=="PPV" && ln==F) {
sp3<-ggplot(EVI_output, aes(x=Days,group=variable))+
list(
geom_point(aes(y=(cases_1), col=pvs), size=0.5),
geom_point(aes(y=(cases_0)), col="grey69", size=0.5),
labs(y = "Cases", x=""),
scale_color_gradient(low = "green", high = "red", limits=c(0, 1)),
labs(color= "PPV"),
theme(legend.position = c(0.95, 0.3),
legend.title = element_text(size=10),
legend.text = element_text(size=8),
legend.key.height = unit(0.5, 'cm'))
)
}
if (graph=="PPV" && ln==T) {
sp3<-ggplot(EVI_output, aes(x=Days,group=variable))+
list(
geom_point(aes(y=log(cases_1), col=pvs), size=0.5),
geom_point(aes(y=log(cases_0)), col="grey69", size=0.5),
labs(y = "ln(Cases)", x=""),
scale_color_gradient(low = "green", high = "red", limits=c(0, 1)),
labs(color= "PPV"),
theme(legend.position = c(0.95, 0.3),
legend.title = element_text(size=10),
legend.text = element_text(size=8),
legend.key.height = unit(0.5, 'cm'))
)
}
if (graph=="NPV" && ln==F) {
sp3<-ggplot(EVI_output, aes(x=Days,group=variable))+
list(
geom_point(aes(y=(cases_0), col=pvn), size=0.5),
geom_point(aes(y=(cases_1)), col="grey69", size=0.5),
labs(y = "Cases"),
scale_color_gradient(low = "green", high = "red", limits=c(0, 1)),
labs(color= "NPV"),
theme(legend.position = c(0.95, 0.3),
legend.title = element_text(size=10),
legend.text = element_text(size=8),
legend.key.height = unit(0.5, 'cm'))
)
}
if (graph=="NPV" && ln==T) {
sp3<-ggplot(EVI_output, aes(x=Days,group=variable))+
list(
geom_point(aes(y=log(cases_0), col=pvn), size=0.5),
geom_point(aes(y=log(cases_1)), col="grey69", size=0.5),
labs(y = "ln(Cases)"),
scale_color_gradient(low = "green", high = "red", limits=c(0, 1)),
labs(color= "NPV"),
theme(legend.position = c(0.95, 0.3),
legend.title = element_text(size=10),
legend.text = element_text(size=8),
legend.key.height = unit(0.5, 'cm'))
)
}
print(sp3)
}
evi.graphs(tmp$Cases)
list.of.packages <- c("ggplot2", "cowplot")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
require(ggplot2)
require(cowplot)
#EVI_output=temp
EVI_output$cases_1=EVI_output$Cases*EVI_output$Index
EVI_output$cases_1[EVI_output$cases_1 == 0] <- NA
EVI_output$cases_0=EVI_output$Cases*(1-EVI_output$Index)
EVI_output$cases_0[EVI_output$cases_0 == 0] <- NA
EVI_output$pvn=EVI_output$pvn*(1-EVI_output$Index)
EVI_output$pvn[EVI_output$pvn == 0] <- NA
EVI_output$pvs=EVI_output$pvs*EVI_output$Index
EVI_output$pvs[EVI_output$pvs == 0] <- NA
EVI_output$variable<-"x"
graph="EVI"
ln=T
if (graph=="EVI" && ln==F) {
sp3<-ggplot(EVI_output, aes(x=Days,group=variable))+
list(
geom_point(aes(y=(Cases), color=Index>0), size=0.5),
scale_color_manual(values=c("grey69", "red3")),
theme(legend.position = "none"),
labs(y = "Cases", x="Days"),
if (type=="l")  geom_path(aes(y=Cases,colour=factor(Index>0)))
)
}
if (graph=="EVI" && ln==T) {
sp3<-ggplot(EVI_output, aes(x=Days,group=variable))+
list(
geom_point(aes(y=log(Cases), color=Index>0), size=0.5),
scale_color_manual(values=c("grey69", "red3")),
theme(legend.position = "none"),
labs(y = "ln(Cases)", x="Days"),
if (type=="l")  geom_path(aes(y=log(Cases),colour=factor(Index>0)))
)
}
if (graph=="PPV" && ln==F) {
sp3<-ggplot(EVI_output, aes(x=Days,group=variable))+
list(
geom_point(aes(y=(cases_1), col=pvs), size=0.5),
geom_point(aes(y=(cases_0)), col="grey69", size=0.5),
labs(y = "Cases", x=""),
scale_color_gradient(low = "green", high = "red", limits=c(0, 1)),
labs(color= "PPV"),
theme(legend.position = c(0.95, 0.3),
legend.title = element_text(size=10),
legend.text = element_text(size=8),
legend.key.height = unit(0.5, 'cm'))
)
}
if (graph=="PPV" && ln==T) {
sp3<-ggplot(EVI_output, aes(x=Days,group=variable))+
list(
geom_point(aes(y=log(cases_1), col=pvs), size=0.5),
geom_point(aes(y=log(cases_0)), col="grey69", size=0.5),
labs(y = "ln(Cases)", x=""),
scale_color_gradient(low = "green", high = "red", limits=c(0, 1)),
labs(color= "PPV"),
theme(legend.position = c(0.95, 0.3),
legend.title = element_text(size=10),
legend.text = element_text(size=8),
legend.key.height = unit(0.5, 'cm'))
)
}
if (graph=="NPV" && ln==F) {
sp3<-ggplot(EVI_output, aes(x=Days,group=variable))+
list(
geom_point(aes(y=(cases_0), col=pvn), size=0.5),
geom_point(aes(y=(cases_1)), col="grey69", size=0.5),
labs(y = "Cases"),
scale_color_gradient(low = "green", high = "red", limits=c(0, 1)),
labs(color= "NPV"),
theme(legend.position = c(0.95, 0.3),
legend.title = element_text(size=10),
legend.text = element_text(size=8),
legend.key.height = unit(0.5, 'cm'))
)
}
if (graph=="NPV" && ln==T) {
sp3<-ggplot(EVI_output, aes(x=Days,group=variable))+
list(
geom_point(aes(y=log(cases_0), col=pvn), size=0.5),
geom_point(aes(y=log(cases_1)), col="grey69", size=0.5),
labs(y = "ln(Cases)"),
scale_color_gradient(low = "green", high = "red", limits=c(0, 1)),
labs(color= "NPV"),
theme(legend.position = c(0.95, 0.3),
legend.title = element_text(size=10),
legend.text = element_text(size=8),
legend.key.height = unit(0.5, 'cm'))
)
}
print(sp3)
rm(evi.graphs())
rm(evi.graphs
)
evi.graphs=function(EVI_output,graph=c("EVI"), ln=T, type="p") {
list.of.packages <- c("ggplot2", "cowplot")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
require(ggplot2)
require(cowplot)
#EVI_output=temp
EVI_output$cases_1=EVI_output$Cases*EVI_output$Index
EVI_output$cases_1[EVI_output$cases_1 == 0] <- NA
EVI_output$cases_0=EVI_output$Cases*(1-EVI_output$Index)
EVI_output$cases_0[EVI_output$cases_0 == 0] <- NA
EVI_output$pvn=EVI_output$pvn*(1-EVI_output$Index)
EVI_output$pvn[EVI_output$pvn == 0] <- NA
EVI_output$pvs=EVI_output$pvs*EVI_output$Index
EVI_output$pvs[EVI_output$pvs == 0] <- NA
EVI_output$variable<-"x"
if (graph=="EVI" && ln==F) {
sp3<-ggplot(EVI_output, aes(x=Days,group=variable))+
list(
geom_point(aes(y=(Cases), color=Index>0), size=0.5),
scale_color_manual(values=c("grey69", "red3")),
theme(legend.position = "none"),
labs(y = "Cases", x="Days"),
if (type=="l")  geom_path(aes(y=Cases,colour=factor(Index>0)))
)
}
if (graph=="EVI" && ln==T) {
sp3<-ggplot(EVI_output, aes(x=Days,group=variable))+
list(
geom_point(aes(y=log(Cases), color=Index>0), size=0.5),
scale_color_manual(values=c("grey69", "red3")),
theme(legend.position = "none"),
labs(y = "ln(Cases)", x="Days"),
if (type=="l")  geom_path(aes(y=log(Cases),colour=factor(Index>0)))
)
}
if (graph=="PPV" && ln==F) {
sp3<-ggplot(EVI_output, aes(x=Days,group=variable))+
list(
geom_point(aes(y=(cases_1), col=pvs), size=0.5),
geom_point(aes(y=(cases_0)), col="grey69", size=0.5),
labs(y = "Cases", x=""),
scale_color_gradient(low = "green", high = "red", limits=c(0, 1)),
labs(color= "PPV"),
theme(legend.position = c(0.95, 0.3),
legend.title = element_text(size=10),
legend.text = element_text(size=8),
legend.key.height = unit(0.5, 'cm'))
)
}
if (graph=="PPV" && ln==T) {
sp3<-ggplot(EVI_output, aes(x=Days,group=variable))+
list(
geom_point(aes(y=log(cases_1), col=pvs), size=0.5),
geom_point(aes(y=log(cases_0)), col="grey69", size=0.5),
labs(y = "ln(Cases)", x=""),
scale_color_gradient(low = "green", high = "red", limits=c(0, 1)),
labs(color= "PPV"),
theme(legend.position = c(0.95, 0.3),
legend.title = element_text(size=10),
legend.text = element_text(size=8),
legend.key.height = unit(0.5, 'cm'))
)
}
if (graph=="NPV" && ln==F) {
sp3<-ggplot(EVI_output, aes(x=Days,group=variable))+
list(
geom_point(aes(y=(cases_0), col=pvn), size=0.5),
geom_point(aes(y=(cases_1)), col="grey69", size=0.5),
labs(y = "Cases"),
scale_color_gradient(low = "green", high = "red", limits=c(0, 1)),
labs(color= "NPV"),
theme(legend.position = c(0.95, 0.3),
legend.title = element_text(size=10),
legend.text = element_text(size=8),
legend.key.height = unit(0.5, 'cm'))
)
}
if (graph=="NPV" && ln==T) {
sp3<-ggplot(EVI_output, aes(x=Days,group=variable))+
list(
geom_point(aes(y=log(cases_0), col=pvn), size=0.5),
geom_point(aes(y=log(cases_1)), col="grey69", size=0.5),
labs(y = "ln(Cases)"),
scale_color_gradient(low = "green", high = "red", limits=c(0, 1)),
labs(color= "NPV"),
theme(legend.position = c(0.95, 0.3),
legend.title = element_text(size=10),
legend.text = element_text(size=8),
legend.key.height = unit(0.5, 'cm'))
)
}
print(sp3)
}
evi.graphs(tmp$Cases)
evi.graphs(EVI_output = tmp$Cases)
EVI_output = tmp$Cases
list.of.packages <- c("ggplot2", "cowplot")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
require(ggplot2)
require(cowplot)
#EVI_output=temp
EVI_output$cases_1=EVI_output$Cases*EVI_output$Index
EVI_output$cases_1[EVI_output$cases_1 == 0] <- NA
EVI_output$Index
EVI_output
EVI_output = tmp$Cases
EVI_output
evi.graphs(tmp)
usethis::use_package("ggplot2 (>3.3.5)")
usethis::use_package("cowplot (>1.1.1)")
devtools::document()
devtools::document()
devtools::document()
usethis::use_package("ggplot2 (>=3.3.5)")
usethis::use_package("cowplot (>=1.1.1)")
devtools::document()
devtools::document()
rm(evi.graphs())
rm(evi.graphs
)
devtools::document()
usethis::use_package("cowplot (>=1.1.1)")
usethis::use_package("ggplot2 (>=3.3.5)")
devtools::document()
devtools::document()
usethis::use_package("ggplot2 (>=3.3.5)")
usethis::use_package("cowplot (>=1.1.1)")
devtools::document()
devtools::document()
devtools::document()
remotes::install_github("ku-awdc/EVI")
devtools::document()
remotes::install_github("ku-awdc/EVI")
devtools::document()
remotes::install_github("ku-awdc/EVI")
require(EVI)
?deviant
remotes::install_github("ku-awdc/EVI")
remotes::install_github("ku-awdc/EVI",force = T)
require(EVI)
?deviant
?deviant
require(EVI)
?deviant
?deviant_update
# packages ----------------------------------------------------------------
library(readr)
library(tidyr)
library(dplyr)
require(coda) # Spectral variances for depedent samples
source("Functions/rollsd.R")
source("Functions/mova.R")
source("Functions/evi.R")
source("Functions/evifcut.R")
source("Functions/status.R")
source("Functions/indic.R")
# data munging ------------------------------------------------------------
wd <- read.csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv")
wd
wd <- as_tibble(wd) %>%
rename_with( ~ sub("X", "", .x), starts_with("X")) %>%
gather(date, cases, 5:ncol(wd), factor_key = TRUE) %>%
mutate(Country.Region = as.factor(Country.Region),
date = as.Date(date, "%m.%d.%y"))
wdata_ll <- wd %>%
mutate(date_num = as.numeric(date)) %>%
group_by(Country.Region) %>% # maybe not needed
arrange(date_num) %>%
mutate(ncases = cases - lag(cases, default = cases[1]))
levels(wdata_ll$Country.Region)[173]<-"Taiwan"
wdata_ll
for (i in unique(wdata_ll$Country.Region))  {
write.table(x = wdata_ll[wdata_ll$Country.Region == i,],
file = file.path("W_cc_corr",paste0(i,"_2.csv")), sep = ";",
append = F, quote = F, row.names = F, col.names = T)
}
# For a single country POC ####
time=proc.time() # 30 minutes per country
wdata_ll
library(readxl)
Italy_613 <- read_excel("cEVI/Italy_613.xlsx")
# Run cEVI for the first 150 cases of Italy
tmp_cEVI=deviant_plus(new_cases = Italy_613$Cases,method = "cEVI")
# Load functions and rest of EVI package
source("cEVI/deviant_cEVI.R")
source("cEVI/evifcut_cEVI.R")
source("cEVI/indic_cEVI.R")
require(EVI)
# Run cEVI for the first 150 cases of Italy
tmp_cEVI=deviant_plus(new_cases = Italy_613$Cases,method = "cEVI")
# Run cEVI for the first 150 cases of Italy
tmp_cEVI=deviant_plus(new_cases = Italy_613$Cases)
deviant_plus=function(new_cases, cum = FALSE, r_a=7, r=0.2, lag_max=30, method="EVI"){
#source("mova.r")
#source("medvol.r")
#source("evi.r")
#source("evifcut.r")
#source("indic.r")
#source("status.r")
#source("rollsd.r")
start_time = Sys.time()
start_cases=14
lag_1=7
c_1=0.01
w_s =7
if (cum == TRUE) new_cases = c(new_cases[1], diff(new_cases))
#calculate the moving average of new confirmed cases
cases=mova(new_cases,r_a)
roll=rollsd(cases[1:start_cases],lag_1)
ev=evi(roll)
ind=indic(ev,c_1, cases[1:start_cases])
status=status(cases[1:start_cases],r)
#initiate chain for positive predictive value
ppv=rep(NA, length(cases))
#initiate chain for negative predictive value
npv=rep(NA, length(cases))
lag_all=rep(NA, start_cases)
c_all=rep(NA, start_cases)
se_all=rep(NA, start_cases)
sp_all=rep(NA, start_cases)
lag_all[1:start_cases]=lag_1
c_all[1:start_cases]=c_1
for (i in (start_cases+1): length(cases)){
case_t=cases[1:i]
#case_t=cases[max(1,(i-33)):i]
#lag_s=7
lag_s=seq(lag_1,min(lag_max,(length(case_t)-1)), 1)
#lag_s=seq(lag_1,min(length(case_t),50), 1)
c_s=seq(0.01,0.5, 0.01)
if(method=="cEVI") c_s=seq(0.01,0.5, 0.05)
#all_j=NA
all_lag=NA
all_cut=NA
all_se=NA
all_sp=NA
if(method=="EVI"){
for (j in lag_s){
roll_t=rollsd(case_t,j)
ev_t=evi(roll_t)
for (l in c_s){
evicut_t=evifcut(ev_t, case_t, l, r)
new_j=j
new_l=l
new_se=evicut_t$sens
new_sp=evicut_t$spec
all_lag[[length(all_lag) + 1]] <- new_j
all_cut[[length(all_cut) + 1]] <- new_l
all_se[[length(all_se) + 1]] <- new_se
all_sp[[length(all_sp) + 1]] <- new_sp
}
}
}
if(method=="cEVI"){
for (l in c_s) {
for (j in lag_s) {
# roll_t <- rollsd(case_t,j)
#  ev_t <- evi(roll_t)
cEVI <- rep(NA, length(cases))
for(k in (j+1):(length(cases)-(j+1))){
enu=mean(cases[(k+1):(k+w_s)]-cases[(k):(k-(w_s-1))],na.rm = T)
den1=sd(cases[(k):(k-(w_s-1))])^2/(length(cases[(k):(k-(w_s-1))]))
den2=sd(cases[(k+1):(k+w_s)])^2/(length(cases[(k+1):(k+w_s)]))
# Spectral variances more appropriate but more time consuming
#den1=spectrum0.ar(cases[(i+1):(i+w_s)])$spec/(length(cases[(i+1):(i+w_s)])) # Spectral variances
#den2=spectrum0.ar(cases[(i):(i-(w_s-1))])$spec/(length(cases[(i):(i-(w_s-1))]))
test=enu/sqrt(den1+den2)
cEVI[k+j+1]=as.numeric((1-pnorm(test))<=l)#*as.numeric(evi[i] >= rate)
}
evicut_t <- evifcut_cEVI(evi=cEVI,cases = case_t, r = r)
all_lag[[length(all_lag) + 1]] <- j
all_cut[[length(all_cut) + 1]] <- l
all_se[[length(all_se) + 1]] <- evicut_t[[1]]
all_sp[[length(all_sp) + 1]] <- evicut_t[[2]]
}
}
}
sesp=as.data.frame(cbind(all_lag,all_cut,all_se,all_sp))
#Select the row with the right window and cut
index=which.max(sesp$all_se+sesp$all_sp-1)
print(i)
print(sesp[index,])
#estimate the parameters for the last observed case
lag_n=sesp$all_lag[index]
c_n=sesp$all_cut[index]
roll_n=rollsd(cases[1:i],lag_n)
# Fix final indicator based on cEVI procedure.
ev_n=evi(roll_n)
ind_n=indic(ev_n,c_n,  case_t)
evicut_n=evifcut_cEVI(ev_n, case_t, r)
roll=c(roll,roll_n[i])
ev=c(ev,ev_n[i])
ind=c(ind, ind_n[i])
lag_all=c(lag_all,lag_n)
c_all=c(c_all,c_n)
se_all=c(se_all,all_se[index])
sp_all=c(sp_all,all_sp[index])
ppv[i]=evicut_n$prev*all_se[index]/
(evicut_n$prev*all_se[index]+(1-evicut_n$prev)*(1-all_sp[index]))
npv[i]=(1-evicut_n$prev)*all_sp[index]/
((1-evicut_n$prev)*all_sp[index]+evicut_n$prev*(1-all_se[index]))
}
Days=(1:length(cases))
EVI=ev
Cases=cases
Index=ind
EVI_out=as.data.frame(cbind(Days, EVI, Cases, Index, ppv, npv,
lag_all, c_all, se_all, sp_all))
EVI_output<<-(EVI_out)
end_time = Sys.time()
time_elapsed = end_time - start_time
print(time_elapsed)
return(EVI_output)
}
# Run cEVI for the first 150 cases of Italy
tmp_cEVI=deviant_plus(new_cases = Italy_613$ncases,method = "cEVI")
?deviant
Italy_613
tmp_cEVI
Italy_613[1:300,]
Italy_300<-Italy_613[1:300,]
devtools::document()
# Load functions and rest of EVI package
source("cEVI/deviant_cEVI.R")
source("cEVI/evifcut_cEVI.R")
source("cEVI/indic_cEVI.R")
require(EVI)
library(readxl)
Italy_613 <- read_excel("cEVI/Italy_613.xlsx")
Italy_300<-Italy_613[1:300,]
View(Italy_300)
?deviant
remotes::install_github("ku-awdc/EVI")
remove.packages("EVI", lib="~/R/win-library/4.1")
remotes::install_github("ku-awdc/EVI")
devtools::document()
devtools::document()
remove.packages("EVI")
remove.packages("cEVIplus")
# Load functions and rest of EVI package
remotes::install_github("ku-awdc/EVI",force=T)
require(EVI)
